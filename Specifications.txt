Introduction/Kupu Arataki
This assessment activity requires you to plan, trial, test and develop a computer program using advanced programming techniques.  You will utilise a development process to help you make informed decisions throughout the coding, testing and trialling of your program and show ongoing refinement to improve the functionality and quality of your program. 
You will be assessed on how effectively you plan your development, decompose the outcome into smaller components, and test and refine your program so that it is a high-quality response to the task (e.g. well-structured, logical, flexible, robust and comprehensively tested).
When planning and developing your program, you must ensure your program:
•	uses variables storing at least two types of data (e.g. numeric, text, Boolean)
•	uses sequence, selection and iteration control structures
•	takes input from a user, sensor(s), or other external source(s)
•	produces output
AND includes two or more advanced programming techniques, such as writing code that:  
•	modifies data stored in collections (e.g. lists, arrays, dictionaries) 
•	defines and manipulates multidimensional data in collections
•	creates methods, functions, or procedures that use parameters and/or return values
•	responds to events generated by a graphical user interface (GUI) 
•	requires non-basic string manipulation
•	uses functionality of additional non-core libraries.
Checkpoint A:    week 6 Term 3    Checkpoint B: Week 8 Term 3   Due: Week 9 Term 3

Task/Hei Mahi
Scenario
The Enviroschools club at your school would like an engaging way to help the students/school community learn about the damage plastics are doing to our oceans and waterways.  Members of the club have read about how gamification has been used to promote environmental causes. They have approached you to develop a computer game program that will help promote awareness of this global problem and ways in which students can take positive action to reduce plastic waste.
1.	TASK PLANNING  Research 
Decide on an appropriate planning methodology, and what project management and version control tools you will use to manage your program development. Examples of project management and version control tools and techniques include:
●	saving backup copies with a logical file naming system
●	using collaboration tools
●	using simple version control software applications
●	using tools or systems to plan tasks and milestones
●	adjusting key actions and tasks where appropriate
